[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alpaca-backtrader-api"
version = "0.16.0"
description = "Alpaca trading API integration for Backtrader"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Alpaca Markets", email = "support@alpaca.markets" }]
maintainers = [{ name = "Alpaca Markets", email = "support@alpaca.markets" }]
keywords = [
    "trading",
    "backtrader",
    "alpaca",
    "finance",
    "algorithmic-trading",
    "backtesting",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "alpaca-py>=0.13.0",
    "backtrader>=1.9.74.123",
    "pandas>=1.3.0",
    "exchange-calendars>=4.2.0",
    "pytz>=2021.1",
    "python-dateutil>=2.8.2",
    "requests>=2.25.1",
]

[project.optional-dependencies]
dev = ["pytest>=6.0", "pytest-cov>=2.0", "ruff>=0.1.0", "mypy>=0.900"]

[project.urls]
Homepage = "https://github.com/alpacahq/alpaca-backtrader-api"
Repository = "https://github.com/alpacahq/alpaca-backtrader-api"
Documentation = "https://github.com/alpacahq/alpaca-backtrader-api#readme"
Issues = "https://github.com/alpacahq/alpaca-backtrader-api/issues"
Changelog = "https://github.com/alpacahq/alpaca-backtrader-api/releases"

[tool.hatch.build.targets.wheel]
packages = ["alpaca_backtrader_api"]

[tool.ruff]
# Set the maximum line length to 88 (Black's default)
line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default
select = [
    "E4",  # pycodestyle errors
    "E7",  # pycodestyle errors  
    "E9",  # pycodestyle errors
    "F",   # Pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "ARG", # flake8-unused-arguments
]

# Allow fix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["alpaca_backtrader_api"]
force-single-line = false
lines-after-imports = 2

[tool.ruff.format]
# Like Black, use double quotes for strings
quote-style = "double"

# Like Black, indent with spaces, rather than tabs
indent-style = "space"

# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending
line-ending = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=alpaca_backtrader_api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "ruff>=0.11.13",
    "twine>=6.1.0",
]
